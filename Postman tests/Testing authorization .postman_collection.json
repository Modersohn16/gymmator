{
	"info": {
		"_postman_id": "1e2bd344-926c-4142-ad9a-8539c13fc4cf",
		"name": "Testing authorization ",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Admin requests, logged in as user",
			"item": [
				{
					"name": "Login (User)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.environment.set(\"BearerToken\", jsonData.token);\r",
									"\r",
									"pm.test(\"Status code is \" + pm.response.code, function ()\r",
									"{\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"  pm.test(\"Response time is less than 400ms\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"  });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"User\",\r\n  \"password\": \"Password1!\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/User/Login",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"User",
								"Login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Trainer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is \" + pm.response.code, function ()\r",
									"{\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"  pm.test(\"Response time is less than 400ms\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"  });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{BearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"firstName\": \"trainer1\",\r\n  \"lastName\": \"trainer1\",\r\n  \"email\": \"email\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/Admin/CreateTrainer",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"Admin",
								"CreateTrainer"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Training Class",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is \" + pm.response.code, function ()\r",
									"{\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"  pm.test(\"Response time is less than 400ms\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"  });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{BearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"gymId\": 1,\r\n  \"name\": \"ClassName\",\r\n  \"trainerId\": 1,\r\n  \"maxPeople\": 10,\r\n  \"description\": \"description\",\r\n  \"start\": \"2021-11-15T08:00:00.962Z\",\r\n  \"end\": \"2021-11-15T09:00:00.962Z\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/TrainingClass/CreateTrainingClass",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"TrainingClass",
								"CreateTrainingClass"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Gym",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is \" + pm.response.code, function ()\r",
									"{\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"  pm.test(\"Response time is less than 400ms\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"  });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{BearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"GymTest\",\r\n  \"streetAdress\": \"streetAdress\",\r\n  \"postalCode\": \"12345\",\r\n  \"city\": \"city\",\r\n  \"maxPeople\": 10,\r\n  \"operationalHours\": \"6-22\",\r\n  \"email\": \"email\",\r\n  \"phoneNumber\": \"059213\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/Gym/CreateGym",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"Gym",
								"CreateGym"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Without login",
			"item": [
				{
					"name": "Change Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is \" + pm.response.code, function ()\r",
									"{\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"  pm.test(\"Response time is less than 400ms\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"  });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userId\": 23,\r\n  \"newPassword\": \"qwerty1\",\r\n  \"oldPassword\": \"qwerty\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/User/ChangePassword",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"User",
								"ChangePassword"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is \" + pm.response.code, function ()\r",
									"{\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"  pm.test(\"Response time is less than 400ms\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"  });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"gymId\": 1,\r\n  \"userId\": 23,\r\n  \"timestamp\": \"2021-11-15T07:32:56.143Z\",\r\n  \"date\": \"2021-11-15T07:32:56.143Z\",\r\n  \"trainerId\": 1,\r\n  \"trainingClassId\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/User/CreateBooking",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"User",
								"CreateBooking"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Users Bookings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is \" + pm.response.code, function ()\r",
									"{\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"  pm.test(\"Response time is less than 400ms\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"  });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}api/User/GetUsersBookings?userId=23",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"User",
								"GetUsersBookings"
							],
							"query": [
								{
									"key": "userId",
									"value": "23"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is \" + pm.response.code, function ()\r",
									"{\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"  pm.test(\"Response time is less than 400ms\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"  });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}api/User/DeleteUser?UserId={{DeleteUserId}}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"User",
								"DeleteUser"
							],
							"query": [
								{
									"key": "UserId",
									"value": "{{DeleteUserId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Training Class",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is \" + pm.response.code, function ()\r",
									"{\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"  pm.test(\"Response time is less than 400ms\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"  });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"gymId\": 1,\r\n  \"name\": \"ClassName\",\r\n  \"trainerId\": 1,\r\n  \"maxPeople\": 10,\r\n  \"description\": \"description\",\r\n  \"start\": \"2021-11-15T08:00:00.962Z\",\r\n  \"end\": \"2021-11-15T09:00:00.962Z\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/TrainingClass/CreateTrainingClass",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"TrainingClass",
								"CreateTrainingClass"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Gym",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is \" + pm.response.code, function ()\r",
									"{\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"  pm.test(\"Response time is less than 400ms\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"  });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"GymTest\",\r\n  \"streetAdress\": \"streetAdress\",\r\n  \"postalCode\": \"12345\",\r\n  \"city\": \"city\",\r\n  \"maxPeople\": 10,\r\n  \"operationalHours\": \"6-22\",\r\n  \"email\": \"email\",\r\n  \"phoneNumber\": \"059213\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/Gym/CreateGym",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"Gym",
								"CreateGym"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Trainer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is \" + pm.response.code, function ()\r",
									"{\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"  pm.test(\"Response time is less than 400ms\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"  });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"firstName\": \"trainer1\",\r\n  \"lastName\": \"trainer1\",\r\n  \"email\": \"email\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/Admin/CreateTrainer",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"Admin",
								"CreateTrainer"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Trying to access other user's data (as user)",
			"item": [
				{
					"name": "Create First User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.environment.set(\"TestUserId\", jsonData.userId);\r",
									"\r",
									"pm.test(\"Status code is \" + pm.response.code, function ()\r",
									"{\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"  pm.test(\"Response time is less than 400ms\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"  });\r",
									"\r",
									"    pm.test(\"Content-Type header is present\", () => {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"  });\r",
									"  \r",
									"  pm.test(\"Content-Type header is application/json\", () => {\r",
									"    pm.expect(pm.request.headers.get('Content-Type')).to.eql('application/json');\r",
									"  });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"firstName\": \"firstName\",\r\n  \"lastName\": \"lastName\",\r\n  \"email\": \"email\",\r\n  \"title\": \"User\",\r\n  \"username\": \"testUser\",\r\n  \"password\": \"Password1!\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/User/CreateUser",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"User",
								"CreateUser"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login (User 1)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.environment.set(\"BearerToken\", jsonData.token);\r",
									"\r",
									"pm.test(\"Status code is \" + pm.response.code, function ()\r",
									"{\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"  pm.test(\"Response time is less than 400ms\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"  });\r",
									"\r",
									"    pm.test(\"Content-Type header is present\", () => {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"  });\r",
									"  \r",
									"  pm.test(\"Content-Type header is application/json\", () => {\r",
									"    pm.expect(pm.request.headers.get('Content-Type')).to.eql('application/json');\r",
									"  });\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"testUser\",\r\n  \"password\": \"Password1!\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/User/Login",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"User",
								"Login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.environment.set(\"TestBookingId\", jsonData.bookingId);\r",
									"\r",
									"pm.test(\"Status code is \" + pm.response.code, function ()\r",
									"{\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"  pm.test(\"Response time is less than 400ms\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"  });\r",
									"\r",
									"    pm.test(\"Content-Type header is present\", () => {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"  });\r",
									"  \r",
									"  pm.test(\"Content-Type header is application/json\", () => {\r",
									"    pm.expect(pm.request.headers.get('Content-Type')).to.eql('application/json');\r",
									"  });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{BearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"gymId\": 1,\r\n  \"userId\": {{TestUserId}},\r\n  \"timestamp\": \"2021-11-15T07:32:56.143Z\",\r\n  \"date\": \"2021-11-17T07:32:56.143Z\",\r\n  \"trainerId\": 1,\r\n  \"trainingClassId\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/User/CreateBooking",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"User",
								"CreateBooking"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Second User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.environment.set(\"TestUserId2\", jsonData.userId);\r",
									"\r",
									"pm.test(\"Status code is \" + pm.response.code, function ()\r",
									"{\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"  pm.test(\"Response time is less than 400ms\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"  });\r",
									"\r",
									"    pm.test(\"Content-Type header is present\", () => {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"  });\r",
									"  \r",
									"  pm.test(\"Content-Type header is application/json\", () => {\r",
									"    pm.expect(pm.request.headers.get('Content-Type')).to.eql('application/json');\r",
									"  });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"firstName\": \"firstName\",\r\n  \"lastName\": \"lastName\",\r\n  \"email\": \"email\",\r\n  \"title\": \"User\",\r\n  \"username\": \"testUser2\",\r\n  \"password\": \"Password1!2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/User/CreateUser",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"User",
								"CreateUser"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login (User 2)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.environment.set(\"BearerToken\", jsonData.token);\r",
									"\r",
									"pm.test(\"Status code is \" + pm.response.code, function ()\r",
									"{\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"  pm.test(\"Response time is less than 400ms\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"  });\r",
									"\r",
									"    pm.test(\"Content-Type header is present\", () => {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"  });\r",
									"  \r",
									"  pm.test(\"Content-Type header is application/json\", () => {\r",
									"    pm.expect(pm.request.headers.get('Content-Type')).to.eql('application/json');\r",
									"  });\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"testUser2\",\r\n  \"password\": \"Password1!2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/User/Login",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"User",
								"Login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is \" + pm.response.code, function ()\r",
									"{\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 400ms\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"  });\r",
									"  \r",
									"pm.test(\"Content-Type header is application/json\", () => {\r",
									"    pm.expect(pm.request.headers.get('Content-Type')).to.eql('application/json');\r",
									"  });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{BearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"firstName\": \"firstName\",\r\n  \"lastName\": \"lastName\",\r\n  \"email\": \"email@email.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/User/UpdateUser?UserId={{TestUserId}}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"User",
								"UpdateUser"
							],
							"query": [
								{
									"key": "UserId",
									"value": "{{TestUserId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is \" + pm.response.code, function ()\r",
									"{\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"  pm.test(\"Response time is less than 400ms\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"  });\r",
									"  \r",
									"  pm.test(\"Content-Type header is application/json\", () => {\r",
									"    pm.expect(pm.request.headers.get('Content-Type')).to.eql('application/json');\r",
									"  });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{BearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"gymId\": 1006,\r\n  \"userId\": {{TestUserId}},\r\n  \"timestamp\": \"2021-11-15T07:32:56.143Z\",\r\n  \"date\": \"2021-11-15T07:32:56.143Z\",\r\n  \"trainerId\": 2,\r\n  \"trainingClassId\": 1009\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/User/UpdateBooking?BookingId={{TestBookingId}}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"User",
								"UpdateBooking"
							],
							"query": [
								{
									"key": "BookingId",
									"value": "{{TestBookingId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is \" + pm.response.code, function ()\r",
									"{\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"  pm.test(\"Response time is less than 400ms\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"  });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{BearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}api/User/GetUserBooking?BookingId={{TestBookingId}}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"User",
								"GetUserBooking"
							],
							"query": [
								{
									"key": "BookingId",
									"value": "{{TestBookingId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is \" + pm.response.code, function ()\r",
									"{\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"  pm.test(\"Response time is less than 400ms\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"  });\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{BearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}api/User/DeleteBooking?BookingId={{TestBookingId}}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"User",
								"DeleteBooking"
							],
							"query": [
								{
									"key": "BookingId",
									"value": "{{TestBookingId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is \" + pm.response.code, function ()\r",
									"{\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"  pm.test(\"Response time is less than 400ms\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"  });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{BearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}api/User/DeleteUser?UserId={{TestUserId}}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"User",
								"DeleteUser"
							],
							"query": [
								{
									"key": "UserId",
									"value": "{{TestUserId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Deleting Test user 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is \" + pm.response.code, function ()\r",
									"{\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"  pm.test(\"Response time is less than 400ms\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"  });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{BearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}api/User/DeleteUser?UserId={{TestUserId2}}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"User",
								"DeleteUser"
							],
							"query": [
								{
									"key": "UserId",
									"value": "{{TestUserId2}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Login (User 1)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.environment.set(\"BearerToken\", jsonData.token);\r",
									"\r",
									"pm.test(\"Status code is \" + pm.response.code, function ()\r",
									"{\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"  pm.test(\"Response time is less than 400ms\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"  });\r",
									"\r",
									"    pm.test(\"Content-Type header is present\", () => {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"  });\r",
									"  \r",
									"  pm.test(\"Content-Type header is application/json\", () => {\r",
									"    pm.expect(pm.request.headers.get('Content-Type')).to.eql('application/json');\r",
									"  });\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"testUser\",\r\n  \"password\": \"Password1!\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/User/Login",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"User",
								"Login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Test Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is \" + pm.response.code, function ()\r",
									"{\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"  pm.test(\"Response time is less than 400ms\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"  });\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{BearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}api/User/DeleteBooking?BookingId={{TestBookingId}}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"User",
								"DeleteBooking"
							],
							"query": [
								{
									"key": "BookingId",
									"value": "{{TestBookingId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Deleting Test user 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is \" + pm.response.code, function ()\r",
									"{\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"  pm.test(\"Response time is less than 400ms\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"  });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{BearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}api/User/DeleteUser?UserId={{TestUserId}}",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"User",
								"DeleteUser"
							],
							"query": [
								{
									"key": "UserId",
									"value": "{{TestUserId}}"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}